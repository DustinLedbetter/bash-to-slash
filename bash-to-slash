#! /usr/bin/env bash

help() {
  # This prints a help page which provides a list of options.
  HELP_MESSAGE='This is a place holder for the real help message.'
  printf "%s" "${HELP_MESSAGE}"
}

placepiece() {
    printf "" >> "${1}"
}

hideaway() {
  COUNT=0
  while [[ "$COUNT" -lt 3 ]]; do
    printf "\033c"
    printf "=======================================================================\n"
    printf "Decide which three directories you would like to hide within----\n" #TODO: That sounds so lame! I have to change that. not too lame, but how's that?
    printf "=======================================================================\n"
    #TODO: What are we calling these "things" we're putting in the directories?
    #TODO: Discuss which directories we wish to use.
    printf "Enter 1 to place in $HOME/Desktop/test1/ \n"
    printf "Enter 2 to place in $HOME/Desktop/test2/ \n"
    printf "Enter 3 to place in $HOME/Desktop/test3/ \n"
    printf "Enter 4 to place in $HOME/Desktop/test4/ \n"
    printf "Enter 5 to place in $HOME/Desktop/test5/ \n"
    #TODO: add more options. Choose x out of total y? 
    printf "Enter r to exit menu \n"
    printf "\n"
    read -p "Enter your selection" answer
    case "$answer" in
    #TODO: I also need to have some testing at some point after the case statement to prevent repeat selections or accidental keystrokes. 
      1) 
        DIR=$HOME/Desktop/test1/test.txt #I used this path for testing only. We'll obviously replace with the real directory paths and files later
        placepiece "$DIR";;  
      2) 
        DIR=$HOME/Desktop/test2/test.txt
        placepiece "$DIR";;
      3)
        DIR=$HOME/Desktop/test3/test.txt 
        placepiece "$DIR";;
      4) 
        DIR=$HOME/Desktop/test4/test.txt
        placepiece "$DIR";;
      5)
        DIR=$HOME/Desktop/test5/test.txt 
        placepiece "$DIR";;
      r) 
        main;; #TODO: Not sure why I even put anything here because I have that "if" statement below. ???
    esac
    if [[ "$answer" -ne "r" ]]; then
      printf "Piece created and placed in %s\n" "$DIR"
    else
      main
    fi
    COUNT="$COUNT"+1
    read -p "Enter return to continue"
  done
  main
}

main "${@}"
